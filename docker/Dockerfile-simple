# Use an OpenJDK base image
FROM openjdk:17-jdk-slim

# Define ARG for environment variable to be passed from docker-compose
ARG CONFIG_TCP_SERVER_PORT
ARG CONFIG_PLUGIN_LIST

# Set the ARG as an ENV variable to make it available in the container
ENV CONFIG_TCP_SERVER_PORT=${CONFIG_TCP_SERVER_PORT}
ENV CONFIG_PLUGIN_LIST=${CONFIG_PLUGIN_LIST}

# Set the working directory
WORKDIR /app

# Copy the JAR file to the image
COPY ../aia-server.jar /app/aia-server.jar

# Copy the configuration file
COPY ../config.yaml.seed /app/config.yaml

# Replace "TCP-SERVER-PORT" with CONFIG_TCP_SERVER_PORT value in config.yaml
RUN sed -i "s/TCP-SERVER-PORT/${CONFIG_TCP_SERVER_PORT}/g" /app/config.yaml

RUN sed -i "s/SERVER-PORT/${CONFIG_TCP_SERVER_PORT}/g" /app/config.yaml

# Copy the plugins directory to the root of the application
COPY ../plugins /app/tmp-plugins/

# Create Plugins Directory
RUN mkdir -p /app/plugins

# At runtime, you can set up a start script to move only the needed files from /app/files to /app
RUN echo "$CONFIG_PLUGIN_LIST" | tr ',' '\n' | xargs -I{} mv /app/tmp-plugins/{} /app/plugins/

# Create a directory inside the container for application data
RUN mkdir -p /app/data

# Expose the necessary port (optional)
# EXPOSE ${CONFIG_TCP_SERVER_PORT}:${CONFIG_TCP_SERVER_PORT}

# Run the JAR file with configuration when the container starts
CMD ["java", "-jar", "/app/aia-server.jar"]
